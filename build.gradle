buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath ("org.junit.platform:junit-platform-gradle-plugin:1.0.0-M4")
    }
}

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java'
    id 'eclipse'
    id 'application'
    id 'java-library'
    id 'checkstyle'
    id "com.github.spotbugs" version "1.6.5"
}

apply plugin: 'application'

mainClassName = "main.java.main.Main"

//mainClassName = 'main.java.Main'

repositories {
  mavenCentral()
}

dependencies {

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    
    // in case JUnit 4 is also needed/wanted
    compile("junit:junit:4.12")
    //testCompile("junit:junit:4.12")
    testRuntime("org.junit.vintage:junit-vintage-engine:4.12.0-M4")
}

sourceSets.main.java.srcDirs = ['src']


apply plugin: 'checkstyle'
apply plugin: 'application'
apply plugin: 'org.junit.platform.gradle.plugin'

junitPlatform {
    details 'tree'
}

checkstyle {
  // Keep checkstyle a little quieter
  ignoreFailures = true
  showViolations = false
  
  configFile = project(':').file('config/checkstyle/checkstyle.xml')
  //configProperties = [ "suppressionFile" : project(':').file('config/checkstyle/suppressions.xml')]
  
}

tasks.withType(Checkstyle) {
  reports {
    html.enabled = true
    xml.enabled = false
  }
}
checkstyle {
    toolVersion = "8.8"
}

// Configure SpotBugs

// The part below needs to be included for Spotbugs
 spotbugs {
   toolVersion = '3.1.8'
 }

// To generate an HTML report instead of XML
 tasks.withType(com.github.spotbugs.SpotBugsTask) {
   reports {
     xml.enabled = false
     html.enabled = true
   }
 }
 
apply plugin: 'java'
apply plugin: 'eclipse'

version = '1.0'
sourceCompatibility = 1.7
targetCompatibility = 1.7

//create a single Jar with all dependencies
task fatJar(type: Jar) {
	manifest {
        // attributes 'Implementation-Title': 'Gradle Jar File Example',  
        attributes 'Implementation-Title': 'BeesJar',  
        	'Implementation-Version': version,
        	'Main-Class': 'main/java/main/Main'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

//Get dependencies from Maven central repository
repositories {
    mavenCentral()
}

//Project dependencies
dependencies {
	compile 'ch.qos.logback:logback-classic:1.1.2'
}




apply plugin: 'jacoco'

afterEvaluate {
    def junitPlatformTestTask = (JavaExec) project.tasks.getByName('junitPlatformTest')

    jacoco {
        applyTo(junitPlatformTestTask)
    }

    project.task(type: JacocoReport, "jacocoJupTestReport") {
        executionData(junitPlatformTestTask)
        sourceSets(sourceSets.main)
        sourceDirectories = files(sourceSets.main.allSource.srcDirs)
        classDirectories = files(sourceSets.main.output)

        reports {
            xml.enabled true
            xml.destination file("${buildDir}/jacoco/report.xml")
            html.enabled true
            html.destination file("${buildDir}/jacoco/html")
        }
    }

    check.dependsOn jacocoJupTestReport
}
configurations {
    junitXmlToHtml
}

task generateHtmlTestReports << {
    def reportsDir = new File(buildDir, 'test-reports')
    reportsDir.mkdirs()

    ant.taskdef(
        name: 'junitReport',
        classname: 'org.apache.tools.ant.taskdefs.optional.junit.XMLResultAggregator',
        classpath: configurations.junitXmlToHtml.asPath
    )

    ant.junitReport(todir: "$buildDir/test-results/junit-platform", tofile: "aggregated-test-results.xml") {
        fileset(dir: "$buildDir/test-results/junit-platform")
        report(format: 'frames', todir: reportsDir)
    }
}

afterEvaluate {
    def junitPlatformTestTask = tasks.getByName('junitPlatformTest')
    generateHtmlTestReports.dependsOn(junitPlatformTestTask)
    check.dependsOn(generateHtmlTestReports)
}

dependencies {
    // configure as normal ...
    junitXmlToHtml 'org.apache.ant:ant-junit:1.9.7'
}